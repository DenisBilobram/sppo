section .text
parse_uint:
    xor rax, rax                 ; Обнулить rax, тут будет результат
    xor rdx, rdx                 ; Обнулить rdx, тут будет количество прочитанных символов
    xor rcx, rcx                 ; Обнулить rcx, тут будет текущий символ

.read_loop:
    movzx rcx, byte [rdi + rdx] ; Загрузить следующий байт строки
    test  rcx, rcx               ; Проверить на конец строки (нуль-терминированная строка)
    jz    .end                   ; Если достигнут конец строки, завершить
    
    sub   cl, '0'                ; Конвертировать ASCII символ в число
    cmp cl, 9
    js    .end
    ja    .end                   ; Если символ не цифра, завершить
    
    imul  rax, rax, 10           ; Умножить текущее число на 10 (сдвинуть влево на один разряд)
    add   rax, rcx               ; Прибавить новую цифру к числу
    
    inc   rdx                    ; Увеличить счётчик прочитанных символов
    jmp   .read_loop             ; Перейти к следующему символу
    
.end:
    ret     