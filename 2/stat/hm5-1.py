import math

# Данные выборки
data = [20, 19, 22, 24, 21, 18, 23, 17, 20, 16, 15, 23, 21, 24, 21, 18, 23, 21, 19, 20, 
        24, 21, 20, 18, 17, 22, 20, 16, 22, 18, 20, 17, 21, 17, 19, 20, 20, 21, 18, 22, 
        23, 21, 25, 22, 20, 19, 21, 24, 23, 21, 19, 22, 21, 19, 20, 23, 22, 25, 21, 21]

# Уровень доверия
confidence = 0.99

# Количество элементов выборки
n = len(data)

# Вычисление среднего значения выборки
mean = sum(data) / n

# Вычисление дисперсии выборки и стандартного отклонения
variance = sum((x - mean) ** 2 for x in data) / (n - 1)
std_dev = math.sqrt(variance)

# Число степеней свободы
df = n - 1

# Критическое значение t для доверительного интервала среднего значения (для уровня доверия 99% и df = 59, t_crit ≈ 2.66)
t_crit = 2.66

# Стандартная ошибка среднего значения
SE = std_dev / math.sqrt(n)

# Доверительный интервал для среднего значения
mean_margin_error = t_crit * SE
mean_conf_interval = (mean - mean_margin_error, mean + mean_margin_error)

# Критические значения chi-square для доверительного интервала стандартного отклонения (для уровня доверия 99% и df = 59)
chi2_lower = 34.764
chi2_upper = 90.531

# Доверительный интервал для стандартного отклонения
std_dev_conf_interval = (
    math.sqrt(df * variance / chi2_upper),
    math.sqrt(df * variance / chi2_lower)
)

# Вывод результатов
print(f"Среднее значение: {mean:.2f}")
print(f"Доверительный интервал для среднего значения: ({mean_conf_interval[0]:.2f}, {mean_conf_interval[1]:.2f})")

print(f"\nСтандартное отклонение: {std_dev:.2f}")
print(f"Доверительный интервал для стандартного отклонения: ({std_dev_conf_interval[0]:.2f}, {std_dev_conf_interval[1]:.2f})")

